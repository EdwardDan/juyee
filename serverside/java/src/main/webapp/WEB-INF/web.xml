<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <description>qpjjw</description>
    <display-name>qpjjw</display-name>

    <!--
     默认的spring配置文件是在WEB-INF下的applicationContext.xml
     Spring 容器启动监听器
      -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:applicationContext.xml
        </param-value>
    </context-param>

    <!-- Character Encoding filter -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- CAS配置 begin -->
    <context-param>
        <param-name>serverName</param-name>
        <param-value>mis.hkjgzx.sh.cn:8080</param-value>
    </context-param>
    <filter>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>

    <filter>
        <filter-name>CAS Validation Filter</filter-name>
        <filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
        <init-param>
            <param-name>casServerUrlPrefix</param-name>
            <param-value>https://www.hkjgzx.sh.cn/</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>CAS Authentication Filter</filter-name>
        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
        <init-param>
            <param-name>casServerLoginUrl</param-name>
            <param-value>https://www.hkjgzx.sh.cn/login</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>/login/loginForSite.do</url-pattern>
    </filter-mapping>
    <!--<filter-mapping>-->
        <!--<filter-name>CAS Validation Filter</filter-name>-->
        <!--<url-pattern>/login/passSync.do</url-pattern>-->
    <!--</filter-mapping>-->

    <filter-mapping>
        <filter-name>CAS Authentication Filter</filter-name>
        <url-pattern>/login/loginForSite.do</url-pattern>
    </filter-mapping>
    <!--<filter-mapping>-->
        <!--<filter-name>CAS Authentication Filter</filter-name>-->
        <!--<url-pattern>/login/passSync.do</url-pattern>-->
    <!--</filter-mapping>-->

    <filter-mapping>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- CAS配置 end -->


    <!--&lt;!&ndash; invalid sql char filter&ndash;&gt;-->
    <!--<filter>-->
        <!--<filter-name>PreventSqlInject</filter-name>-->
        <!--<filter-class>com.justonetech.core.filter.SqlInjectFilter</filter-class>-->
        <!--&lt;!&ndash;filter word, split with | &ndash;&gt;-->
        <!--<init-param>-->
            <!--<param-name>invalidsql</param-name>-->
            <!--<param-value>select |select%20|insert|delete|update |update%20|create |create%20|destory|drop|alter|truncate</param-value>-->
        <!--</init-param>-->
        <!--&lt;!&ndash; error page &ndash;&gt;-->
        <!--<init-param>-->
            <!--<param-name>error</param-name>-->
            <!--<param-value>/errorParam.jsp</param-value>-->
        <!--</init-param>-->
        <!--&lt;!&ndash; debug &ndash;&gt;-->
        <!--<init-param>-->
            <!--<param-name>debug</param-name>-->
            <!--<param-value>false</param-value>-->
        <!--</init-param>-->
        <!--&lt;!&ndash; encoding &ndash;&gt;-->
        <!--<init-param>-->
            <!--<param-name>encoding</param-name>-->
            <!--<param-value>UTF-8</param-value>-->
        <!--</init-param>-->
        <!--&lt;!&ndash; isMultipartFilter &ndash;&gt;-->
        <!--<init-param>-->
            <!--<param-name>isMultipartFilter</param-name>-->
            <!--<param-value>false</param-value>-->
        <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>PreventSqlInject</filter-name>-->
        <!--<url-pattern>*.do</url-pattern>-->
    <!--</filter-mapping>-->

    <!--&lt;!&ndash; invalid word filter&ndash;&gt;-->
    <!--<filter>-->
        <!--<filter-name>charEncoder</filter-name>-->
        <!--<filter-class>com.justonetech.core.filter.WordFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>charEncoder</filter-name>-->
        <!--<url-pattern>*.do</url-pattern>-->
    <!--</filter-mapping>-->

    <!-- Hibernate Open Session In View filter-->
    <filter>
        <filter-name>osivFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>osivFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>osivFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <!-- webservice url -->
    <filter-mapping>
        <filter-name>osivFilter</filter-name>
        <url-pattern>/service/*</url-pattern>
    </filter-mapping>

    <!--压缩-->
    <!--<filter>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<filter-class>net.sf.ehcache.constructs.web.filter.GzipFilter</filter-class>-->
    <!--</filter>-->

    <!--<filter-mapping>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<url-pattern>*.html</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter-mapping>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<url-pattern>*.js</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter-mapping>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<url-pattern>*.css</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter-mapping>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<url-pattern>*.do</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter-mapping>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<url-pattern>*.json</url-pattern>-->
    <!--</filter-mapping>-->

    <!--Spring url 处理 -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <!--<url-pattern>*.do</url-pattern>-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- Spring 刷新Introspector防止内存泄露 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!--Spring ApplicationContext 载入 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.justonetech.core.listener.StartupListener</listener-class>
    </listener>

    <!--<listener>-->
    <!--<listener-class>com.justonetech.core.security.count.UserSessionListener</listener-class>-->
    <!--</listener>-->
    <listener>
        <listener-class>com.justonetech.core.security.count.EnhancedHttpSessionEventPublisher</listener-class>
    </listener>

    <!--<listener>-->
    <!--<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>-->
    <!--</listener>-->

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- fckeditor 设置 -->
    <servlet>
        <servlet-name>ConnectorServlet</servlet-name>
        <servlet-class>
            net.fckeditor.connector.ConnectorServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ConnectorServlet</servlet-name>
        <url-pattern>/js/fckeditor/editor/filemanager/connectors/*</url-pattern>
    </servlet-mapping>

    <!-- 发布webservice 设置 -->
    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/service/*</url-pattern>
    </servlet-mapping>

    <!--report servlet-->
    <servlet>
        <servlet-name>ReportServer</servlet-name>
        <servlet-class>com.fr.web.ReportServlet</servlet-class>
        <load-on-startup>0</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ReportServer</servlet-name>
        <url-pattern>/ReportServer</url-pattern>
    </servlet-mapping>

    <!--jBPM job executor servlet-->
    <!--<servlet>-->
    <!--<servlet-name>JobExecutorServlet</servlet-name>-->
    <!--<servlet-class>org.jbpm.job.executor.JobExecutorServlet</servlet-class>-->
    <!--<load-on-startup>3</load-on-startup>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
    <!--<servlet-name>JobExecutorServlet</servlet-name>-->
    <!--<url-pattern>/jobexecutor</url-pattern>-->
    <!--</servlet-mapping>-->
    <!--jBPM job executor servlet-->

    <welcome-file-list>
        <welcome-file>login.jsp</welcome-file>
        <!--<welcome-file>site/index.do</welcome-file>-->
    </welcome-file-list>

    <!-- session超时定义,单位为分钟 -->
    <!--暂定为60分钟-->
    <session-config>
        <session-timeout>120</session-timeout>
    </session-config>

    <error-page>
        <error-code>404</error-code>
        <location>/error.jsp</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/error.jsp</location>
    </error-page>

    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <!-- Displays a stack trace -->
        <location>/error.jsp</location>
    </error-page>

    <!-- 增加附件类型 -->
    <mime-mapping>
        <extension>rar</extension>
        <mime-type>application/octet-stream</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xls</extension>
        <mime-type>application/octet-stream</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xlsx</extension>
        <mime-type>application/octet-stream</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>doc</extension>
        <mime-type>application/octet-stream</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>docx</extension>
        <mime-type>application/octet-stream</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>pdf</extension>
        <mime-type>application/octet-stream</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>jpg</extension>
        <mime-type>application/octet-stream</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>bmp</extension>
        <mime-type>application/octet-stream</mime-type>
    </mime-mapping>
</web-app>
