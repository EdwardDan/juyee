package com.justonetech.biz.utils.webService.monitorWebService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.2
 * 2012-05-28T14:09:36.381+08:00
 * Generated source version: 2.5.2
 * 
 */
@WebServiceClient(name = "MonitorWebServiceImplService", 
                  wsdlLocation = "file:/E:/svn/biz/trunk/java/src/main/java/com/justonetech/biz/utils/webService/monitorWebService/monitorWebService.wsdl",
                  targetNamespace = "http://monitor.webservice.pagd.justonetech.com/") 
public class MonitorWebServiceImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://monitor.webservice.pagd.justonetech.com/", "MonitorWebServiceImplService");
    public final static QName MonitorWebServiceImplPort = new QName("http://monitor.webservice.pagd.justonetech.com/", "MonitorWebServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/E:/svn/biz/trunk/java/src/main/java/com/justonetech/biz/utils/webService/monitorWebService/monitorWebService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MonitorWebServiceImplService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/E:/svn/biz/trunk/java/src/main/java/com/justonetech/biz/utils/webService/monitorWebService/monitorWebService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public MonitorWebServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MonitorWebServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MonitorWebServiceImplService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns MonitorWebService
     */
    @WebEndpoint(name = "MonitorWebServiceImplPort")
    public MonitorWebService getMonitorWebServiceImplPort() {
        return super.getPort(MonitorWebServiceImplPort, MonitorWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MonitorWebService
     */
    @WebEndpoint(name = "MonitorWebServiceImplPort")
    public MonitorWebService getMonitorWebServiceImplPort(WebServiceFeature... features) {
        return super.getPort(MonitorWebServiceImplPort, MonitorWebService.class, features);
    }

}
