/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.justonetech.proj.model.impl;

import com.justonetech.proj.model.Company;
import com.justonetech.proj.model.CompanyModel;
import com.justonetech.proj.model.CompanySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Company service. Represents a row in the &quot;proj_Company&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.justonetech.proj.model.CompanyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CompanyImpl}.
 * </p>
 *
 * @author fanqi
 * @see CompanyImpl
 * @see com.justonetech.proj.model.Company
 * @see com.justonetech.proj.model.CompanyModel
 * @generated
 */
@JSON(strict = true)
public class CompanyModelImpl extends BaseModelImpl<Company>
	implements CompanyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a company model instance should use the {@link com.justonetech.proj.model.Company} interface instead.
	 */
	public static final String TABLE_NAME = "proj_Company";
	public static final Object[][] TABLE_COLUMNS = {
			{ "companyId", Types.BIGINT },
			{ "type_", Types.BIGINT },
			{ "unitName", Types.VARCHAR },
			{ "indepLegal", Types.VARCHAR },
			{ "indepLegalTel", Types.VARCHAR },
			{ "indepLegalFax", Types.VARCHAR },
			{ "indepLegalPhone", Types.VARCHAR },
			{ "projLegal", Types.VARCHAR },
			{ "projLegalTel", Types.VARCHAR },
			{ "projLegalFax", Types.VARCHAR },
			{ "projLegalPhone", Types.VARCHAR },
			{ "linkman", Types.VARCHAR },
			{ "linkmanTel", Types.VARCHAR },
			{ "linkmanFax", Types.VARCHAR },
			{ "linkmanPhone", Types.VARCHAR },
			{ "projectId", Types.BIGINT },
			{ "biddingId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table proj_Company (companyId LONG not null primary key,type_ LONG,unitName VARCHAR(75) null,indepLegal VARCHAR(75) null,indepLegalTel VARCHAR(75) null,indepLegalFax VARCHAR(75) null,indepLegalPhone VARCHAR(75) null,projLegal VARCHAR(75) null,projLegalTel VARCHAR(75) null,projLegalFax VARCHAR(75) null,projLegalPhone VARCHAR(75) null,linkman VARCHAR(75) null,linkmanTel VARCHAR(75) null,linkmanFax VARCHAR(75) null,linkmanPhone VARCHAR(75) null,projectId LONG,biddingId LONG)";
	public static final String TABLE_SQL_DROP = "drop table proj_Company";
	public static final String ORDER_BY_JPQL = " ORDER BY company.companyId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY proj_Company.companyId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.justonetech.proj.model.Company"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.justonetech.proj.model.Company"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.justonetech.proj.model.Company"),
			true);
	public static long BIDDINGID_COLUMN_BITMASK = 1L;
	public static long PROJECTID_COLUMN_BITMASK = 2L;
	public static long COMPANYID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Company toModel(CompanySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Company model = new CompanyImpl();

		model.setCompanyId(soapModel.getCompanyId());
		model.setType(soapModel.getType());
		model.setUnitName(soapModel.getUnitName());
		model.setIndepLegal(soapModel.getIndepLegal());
		model.setIndepLegalTel(soapModel.getIndepLegalTel());
		model.setIndepLegalFax(soapModel.getIndepLegalFax());
		model.setIndepLegalPhone(soapModel.getIndepLegalPhone());
		model.setProjLegal(soapModel.getProjLegal());
		model.setProjLegalTel(soapModel.getProjLegalTel());
		model.setProjLegalFax(soapModel.getProjLegalFax());
		model.setProjLegalPhone(soapModel.getProjLegalPhone());
		model.setLinkman(soapModel.getLinkman());
		model.setLinkmanTel(soapModel.getLinkmanTel());
		model.setLinkmanFax(soapModel.getLinkmanFax());
		model.setLinkmanPhone(soapModel.getLinkmanPhone());
		model.setProjectId(soapModel.getProjectId());
		model.setBiddingId(soapModel.getBiddingId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Company> toModels(CompanySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Company> models = new ArrayList<Company>(soapModels.length);

		for (CompanySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.justonetech.proj.model.Company"));

	public CompanyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _companyId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCompanyId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _companyId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Company.class;
	}

	@Override
	public String getModelClassName() {
		return Company.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("companyId", getCompanyId());
		attributes.put("type", getType());
		attributes.put("unitName", getUnitName());
		attributes.put("indepLegal", getIndepLegal());
		attributes.put("indepLegalTel", getIndepLegalTel());
		attributes.put("indepLegalFax", getIndepLegalFax());
		attributes.put("indepLegalPhone", getIndepLegalPhone());
		attributes.put("projLegal", getProjLegal());
		attributes.put("projLegalTel", getProjLegalTel());
		attributes.put("projLegalFax", getProjLegalFax());
		attributes.put("projLegalPhone", getProjLegalPhone());
		attributes.put("linkman", getLinkman());
		attributes.put("linkmanTel", getLinkmanTel());
		attributes.put("linkmanFax", getLinkmanFax());
		attributes.put("linkmanPhone", getLinkmanPhone());
		attributes.put("projectId", getProjectId());
		attributes.put("biddingId", getBiddingId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long type = (Long)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		String unitName = (String)attributes.get("unitName");

		if (unitName != null) {
			setUnitName(unitName);
		}

		String indepLegal = (String)attributes.get("indepLegal");

		if (indepLegal != null) {
			setIndepLegal(indepLegal);
		}

		String indepLegalTel = (String)attributes.get("indepLegalTel");

		if (indepLegalTel != null) {
			setIndepLegalTel(indepLegalTel);
		}

		String indepLegalFax = (String)attributes.get("indepLegalFax");

		if (indepLegalFax != null) {
			setIndepLegalFax(indepLegalFax);
		}

		String indepLegalPhone = (String)attributes.get("indepLegalPhone");

		if (indepLegalPhone != null) {
			setIndepLegalPhone(indepLegalPhone);
		}

		String projLegal = (String)attributes.get("projLegal");

		if (projLegal != null) {
			setProjLegal(projLegal);
		}

		String projLegalTel = (String)attributes.get("projLegalTel");

		if (projLegalTel != null) {
			setProjLegalTel(projLegalTel);
		}

		String projLegalFax = (String)attributes.get("projLegalFax");

		if (projLegalFax != null) {
			setProjLegalFax(projLegalFax);
		}

		String projLegalPhone = (String)attributes.get("projLegalPhone");

		if (projLegalPhone != null) {
			setProjLegalPhone(projLegalPhone);
		}

		String linkman = (String)attributes.get("linkman");

		if (linkman != null) {
			setLinkman(linkman);
		}

		String linkmanTel = (String)attributes.get("linkmanTel");

		if (linkmanTel != null) {
			setLinkmanTel(linkmanTel);
		}

		String linkmanFax = (String)attributes.get("linkmanFax");

		if (linkmanFax != null) {
			setLinkmanFax(linkmanFax);
		}

		String linkmanPhone = (String)attributes.get("linkmanPhone");

		if (linkmanPhone != null) {
			setLinkmanPhone(linkmanPhone);
		}

		Long projectId = (Long)attributes.get("projectId");

		if (projectId != null) {
			setProjectId(projectId);
		}

		Long biddingId = (Long)attributes.get("biddingId");

		if (biddingId != null) {
			setBiddingId(biddingId);
		}
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask = -1L;

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getType() {
		return _type;
	}

	@Override
	public void setType(long type) {
		_type = type;
	}

	@JSON
	@Override
	public String getUnitName() {
		if (_unitName == null) {
			return StringPool.BLANK;
		}
		else {
			return _unitName;
		}
	}

	@Override
	public void setUnitName(String unitName) {
		_unitName = unitName;
	}

	@JSON
	@Override
	public String getIndepLegal() {
		if (_indepLegal == null) {
			return StringPool.BLANK;
		}
		else {
			return _indepLegal;
		}
	}

	@Override
	public void setIndepLegal(String indepLegal) {
		_indepLegal = indepLegal;
	}

	@JSON
	@Override
	public String getIndepLegalTel() {
		if (_indepLegalTel == null) {
			return StringPool.BLANK;
		}
		else {
			return _indepLegalTel;
		}
	}

	@Override
	public void setIndepLegalTel(String indepLegalTel) {
		_indepLegalTel = indepLegalTel;
	}

	@JSON
	@Override
	public String getIndepLegalFax() {
		if (_indepLegalFax == null) {
			return StringPool.BLANK;
		}
		else {
			return _indepLegalFax;
		}
	}

	@Override
	public void setIndepLegalFax(String indepLegalFax) {
		_indepLegalFax = indepLegalFax;
	}

	@JSON
	@Override
	public String getIndepLegalPhone() {
		if (_indepLegalPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _indepLegalPhone;
		}
	}

	@Override
	public void setIndepLegalPhone(String indepLegalPhone) {
		_indepLegalPhone = indepLegalPhone;
	}

	@JSON
	@Override
	public String getProjLegal() {
		if (_projLegal == null) {
			return StringPool.BLANK;
		}
		else {
			return _projLegal;
		}
	}

	@Override
	public void setProjLegal(String projLegal) {
		_projLegal = projLegal;
	}

	@JSON
	@Override
	public String getProjLegalTel() {
		if (_projLegalTel == null) {
			return StringPool.BLANK;
		}
		else {
			return _projLegalTel;
		}
	}

	@Override
	public void setProjLegalTel(String projLegalTel) {
		_projLegalTel = projLegalTel;
	}

	@JSON
	@Override
	public String getProjLegalFax() {
		if (_projLegalFax == null) {
			return StringPool.BLANK;
		}
		else {
			return _projLegalFax;
		}
	}

	@Override
	public void setProjLegalFax(String projLegalFax) {
		_projLegalFax = projLegalFax;
	}

	@JSON
	@Override
	public String getProjLegalPhone() {
		if (_projLegalPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _projLegalPhone;
		}
	}

	@Override
	public void setProjLegalPhone(String projLegalPhone) {
		_projLegalPhone = projLegalPhone;
	}

	@JSON
	@Override
	public String getLinkman() {
		if (_linkman == null) {
			return StringPool.BLANK;
		}
		else {
			return _linkman;
		}
	}

	@Override
	public void setLinkman(String linkman) {
		_linkman = linkman;
	}

	@JSON
	@Override
	public String getLinkmanTel() {
		if (_linkmanTel == null) {
			return StringPool.BLANK;
		}
		else {
			return _linkmanTel;
		}
	}

	@Override
	public void setLinkmanTel(String linkmanTel) {
		_linkmanTel = linkmanTel;
	}

	@JSON
	@Override
	public String getLinkmanFax() {
		if (_linkmanFax == null) {
			return StringPool.BLANK;
		}
		else {
			return _linkmanFax;
		}
	}

	@Override
	public void setLinkmanFax(String linkmanFax) {
		_linkmanFax = linkmanFax;
	}

	@JSON
	@Override
	public String getLinkmanPhone() {
		if (_linkmanPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _linkmanPhone;
		}
	}

	@Override
	public void setLinkmanPhone(String linkmanPhone) {
		_linkmanPhone = linkmanPhone;
	}

	@JSON
	@Override
	public long getProjectId() {
		return _projectId;
	}

	@Override
	public void setProjectId(long projectId) {
		_columnBitmask |= PROJECTID_COLUMN_BITMASK;

		if (!_setOriginalProjectId) {
			_setOriginalProjectId = true;

			_originalProjectId = _projectId;
		}

		_projectId = projectId;
	}

	public long getOriginalProjectId() {
		return _originalProjectId;
	}

	@JSON
	@Override
	public long getBiddingId() {
		return _biddingId;
	}

	@Override
	public void setBiddingId(long biddingId) {
		_columnBitmask |= BIDDINGID_COLUMN_BITMASK;

		if (!_setOriginalBiddingId) {
			_setOriginalBiddingId = true;

			_originalBiddingId = _biddingId;
		}

		_biddingId = biddingId;
	}

	public long getOriginalBiddingId() {
		return _originalBiddingId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Company.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Company toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Company)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CompanyImpl companyImpl = new CompanyImpl();

		companyImpl.setCompanyId(getCompanyId());
		companyImpl.setType(getType());
		companyImpl.setUnitName(getUnitName());
		companyImpl.setIndepLegal(getIndepLegal());
		companyImpl.setIndepLegalTel(getIndepLegalTel());
		companyImpl.setIndepLegalFax(getIndepLegalFax());
		companyImpl.setIndepLegalPhone(getIndepLegalPhone());
		companyImpl.setProjLegal(getProjLegal());
		companyImpl.setProjLegalTel(getProjLegalTel());
		companyImpl.setProjLegalFax(getProjLegalFax());
		companyImpl.setProjLegalPhone(getProjLegalPhone());
		companyImpl.setLinkman(getLinkman());
		companyImpl.setLinkmanTel(getLinkmanTel());
		companyImpl.setLinkmanFax(getLinkmanFax());
		companyImpl.setLinkmanPhone(getLinkmanPhone());
		companyImpl.setProjectId(getProjectId());
		companyImpl.setBiddingId(getBiddingId());

		companyImpl.resetOriginalValues();

		return companyImpl;
	}

	@Override
	public int compareTo(Company company) {
		int value = 0;

		if (getCompanyId() < company.getCompanyId()) {
			value = -1;
		}
		else if (getCompanyId() > company.getCompanyId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Company)) {
			return false;
		}

		Company company = (Company)obj;

		long primaryKey = company.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CompanyModelImpl companyModelImpl = this;

		companyModelImpl._originalProjectId = companyModelImpl._projectId;

		companyModelImpl._setOriginalProjectId = false;

		companyModelImpl._originalBiddingId = companyModelImpl._biddingId;

		companyModelImpl._setOriginalBiddingId = false;

		companyModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Company> toCacheModel() {
		CompanyCacheModel companyCacheModel = new CompanyCacheModel();

		companyCacheModel.companyId = getCompanyId();

		companyCacheModel.type = getType();

		companyCacheModel.unitName = getUnitName();

		String unitName = companyCacheModel.unitName;

		if ((unitName != null) && (unitName.length() == 0)) {
			companyCacheModel.unitName = null;
		}

		companyCacheModel.indepLegal = getIndepLegal();

		String indepLegal = companyCacheModel.indepLegal;

		if ((indepLegal != null) && (indepLegal.length() == 0)) {
			companyCacheModel.indepLegal = null;
		}

		companyCacheModel.indepLegalTel = getIndepLegalTel();

		String indepLegalTel = companyCacheModel.indepLegalTel;

		if ((indepLegalTel != null) && (indepLegalTel.length() == 0)) {
			companyCacheModel.indepLegalTel = null;
		}

		companyCacheModel.indepLegalFax = getIndepLegalFax();

		String indepLegalFax = companyCacheModel.indepLegalFax;

		if ((indepLegalFax != null) && (indepLegalFax.length() == 0)) {
			companyCacheModel.indepLegalFax = null;
		}

		companyCacheModel.indepLegalPhone = getIndepLegalPhone();

		String indepLegalPhone = companyCacheModel.indepLegalPhone;

		if ((indepLegalPhone != null) && (indepLegalPhone.length() == 0)) {
			companyCacheModel.indepLegalPhone = null;
		}

		companyCacheModel.projLegal = getProjLegal();

		String projLegal = companyCacheModel.projLegal;

		if ((projLegal != null) && (projLegal.length() == 0)) {
			companyCacheModel.projLegal = null;
		}

		companyCacheModel.projLegalTel = getProjLegalTel();

		String projLegalTel = companyCacheModel.projLegalTel;

		if ((projLegalTel != null) && (projLegalTel.length() == 0)) {
			companyCacheModel.projLegalTel = null;
		}

		companyCacheModel.projLegalFax = getProjLegalFax();

		String projLegalFax = companyCacheModel.projLegalFax;

		if ((projLegalFax != null) && (projLegalFax.length() == 0)) {
			companyCacheModel.projLegalFax = null;
		}

		companyCacheModel.projLegalPhone = getProjLegalPhone();

		String projLegalPhone = companyCacheModel.projLegalPhone;

		if ((projLegalPhone != null) && (projLegalPhone.length() == 0)) {
			companyCacheModel.projLegalPhone = null;
		}

		companyCacheModel.linkman = getLinkman();

		String linkman = companyCacheModel.linkman;

		if ((linkman != null) && (linkman.length() == 0)) {
			companyCacheModel.linkman = null;
		}

		companyCacheModel.linkmanTel = getLinkmanTel();

		String linkmanTel = companyCacheModel.linkmanTel;

		if ((linkmanTel != null) && (linkmanTel.length() == 0)) {
			companyCacheModel.linkmanTel = null;
		}

		companyCacheModel.linkmanFax = getLinkmanFax();

		String linkmanFax = companyCacheModel.linkmanFax;

		if ((linkmanFax != null) && (linkmanFax.length() == 0)) {
			companyCacheModel.linkmanFax = null;
		}

		companyCacheModel.linkmanPhone = getLinkmanPhone();

		String linkmanPhone = companyCacheModel.linkmanPhone;

		if ((linkmanPhone != null) && (linkmanPhone.length() == 0)) {
			companyCacheModel.linkmanPhone = null;
		}

		companyCacheModel.projectId = getProjectId();

		companyCacheModel.biddingId = getBiddingId();

		return companyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{companyId=");
		sb.append(getCompanyId());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", unitName=");
		sb.append(getUnitName());
		sb.append(", indepLegal=");
		sb.append(getIndepLegal());
		sb.append(", indepLegalTel=");
		sb.append(getIndepLegalTel());
		sb.append(", indepLegalFax=");
		sb.append(getIndepLegalFax());
		sb.append(", indepLegalPhone=");
		sb.append(getIndepLegalPhone());
		sb.append(", projLegal=");
		sb.append(getProjLegal());
		sb.append(", projLegalTel=");
		sb.append(getProjLegalTel());
		sb.append(", projLegalFax=");
		sb.append(getProjLegalFax());
		sb.append(", projLegalPhone=");
		sb.append(getProjLegalPhone());
		sb.append(", linkman=");
		sb.append(getLinkman());
		sb.append(", linkmanTel=");
		sb.append(getLinkmanTel());
		sb.append(", linkmanFax=");
		sb.append(getLinkmanFax());
		sb.append(", linkmanPhone=");
		sb.append(getLinkmanPhone());
		sb.append(", projectId=");
		sb.append(getProjectId());
		sb.append(", biddingId=");
		sb.append(getBiddingId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("com.justonetech.proj.model.Company");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>unitName</column-name><column-value><![CDATA[");
		sb.append(getUnitName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>indepLegal</column-name><column-value><![CDATA[");
		sb.append(getIndepLegal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>indepLegalTel</column-name><column-value><![CDATA[");
		sb.append(getIndepLegalTel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>indepLegalFax</column-name><column-value><![CDATA[");
		sb.append(getIndepLegalFax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>indepLegalPhone</column-name><column-value><![CDATA[");
		sb.append(getIndepLegalPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projLegal</column-name><column-value><![CDATA[");
		sb.append(getProjLegal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projLegalTel</column-name><column-value><![CDATA[");
		sb.append(getProjLegalTel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projLegalFax</column-name><column-value><![CDATA[");
		sb.append(getProjLegalFax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projLegalPhone</column-name><column-value><![CDATA[");
		sb.append(getProjLegalPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkman</column-name><column-value><![CDATA[");
		sb.append(getLinkman());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkmanTel</column-name><column-value><![CDATA[");
		sb.append(getLinkmanTel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkmanFax</column-name><column-value><![CDATA[");
		sb.append(getLinkmanFax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkmanPhone</column-name><column-value><![CDATA[");
		sb.append(getLinkmanPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectId</column-name><column-value><![CDATA[");
		sb.append(getProjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biddingId</column-name><column-value><![CDATA[");
		sb.append(getBiddingId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Company.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Company.class
		};
	private long _companyId;
	private long _type;
	private String _unitName;
	private String _indepLegal;
	private String _indepLegalTel;
	private String _indepLegalFax;
	private String _indepLegalPhone;
	private String _projLegal;
	private String _projLegalTel;
	private String _projLegalFax;
	private String _projLegalPhone;
	private String _linkman;
	private String _linkmanTel;
	private String _linkmanFax;
	private String _linkmanPhone;
	private long _projectId;
	private long _originalProjectId;
	private boolean _setOriginalProjectId;
	private long _biddingId;
	private long _originalBiddingId;
	private boolean _setOriginalBiddingId;
	private long _columnBitmask;
	private Company _escapedModel;
}