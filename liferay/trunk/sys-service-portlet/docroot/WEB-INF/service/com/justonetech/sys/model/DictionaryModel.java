/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.justonetech.sys.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Dictionary service. Represents a row in the &quot;sys_Dictionary&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.justonetech.sys.model.impl.DictionaryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.justonetech.sys.model.impl.DictionaryImpl}.
 * </p>
 *
 * @author fanqi
 * @see Dictionary
 * @see com.justonetech.sys.model.impl.DictionaryImpl
 * @see com.justonetech.sys.model.impl.DictionaryModelImpl
 * @generated
 */
public interface DictionaryModel extends BaseModel<Dictionary>, GroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dictionary model instance should use the {@link Dictionary} interface instead.
	 */

	/**
	 * Returns the primary key of this dictionary.
	 *
	 * @return the primary key of this dictionary
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dictionary.
	 *
	 * @param primaryKey the primary key of this dictionary
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the dictionary ID of this dictionary.
	 *
	 * @return the dictionary ID of this dictionary
	 */
	public long getDictionaryId();

	/**
	 * Sets the dictionary ID of this dictionary.
	 *
	 * @param dictionaryId the dictionary ID of this dictionary
	 */
	public void setDictionaryId(long dictionaryId);

	/**
	 * Returns the group ID of this dictionary.
	 *
	 * @return the group ID of this dictionary
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this dictionary.
	 *
	 * @param groupId the group ID of this dictionary
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this dictionary.
	 *
	 * @return the company ID of this dictionary
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this dictionary.
	 *
	 * @param companyId the company ID of this dictionary
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this dictionary.
	 *
	 * @return the user ID of this dictionary
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this dictionary.
	 *
	 * @param userId the user ID of this dictionary
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this dictionary.
	 *
	 * @return the user uuid of this dictionary
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this dictionary.
	 *
	 * @param userUuid the user uuid of this dictionary
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this dictionary.
	 *
	 * @return the user name of this dictionary
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this dictionary.
	 *
	 * @param userName the user name of this dictionary
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this dictionary.
	 *
	 * @return the create date of this dictionary
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this dictionary.
	 *
	 * @param createDate the create date of this dictionary
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this dictionary.
	 *
	 * @return the modified date of this dictionary
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this dictionary.
	 *
	 * @param modifiedDate the modified date of this dictionary
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the code of this dictionary.
	 *
	 * @return the code of this dictionary
	 */
	@AutoEscape
	public String getCode();

	/**
	 * Sets the code of this dictionary.
	 *
	 * @param code the code of this dictionary
	 */
	public void setCode(String code);

	/**
	 * Returns the name of this dictionary.
	 *
	 * @return the name of this dictionary
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this dictionary.
	 *
	 * @param name the name of this dictionary
	 */
	public void setName(String name);

	/**
	 * Returns the is leaf of this dictionary.
	 *
	 * @return the is leaf of this dictionary
	 */
	public boolean getIsLeaf();

	/**
	 * Returns <code>true</code> if this dictionary is is leaf.
	 *
	 * @return <code>true</code> if this dictionary is is leaf; <code>false</code> otherwise
	 */
	public boolean isIsLeaf();

	/**
	 * Sets whether this dictionary is is leaf.
	 *
	 * @param isLeaf the is leaf of this dictionary
	 */
	public void setIsLeaf(boolean isLeaf);

	/**
	 * Returns the sort no of this dictionary.
	 *
	 * @return the sort no of this dictionary
	 */
	public int getSortNo();

	/**
	 * Sets the sort no of this dictionary.
	 *
	 * @param sortNo the sort no of this dictionary
	 */
	public void setSortNo(int sortNo);

	/**
	 * Returns the desc of this dictionary.
	 *
	 * @return the desc of this dictionary
	 */
	@AutoEscape
	public String getDesc();

	/**
	 * Sets the desc of this dictionary.
	 *
	 * @param desc the desc of this dictionary
	 */
	public void setDesc(String desc);

	/**
	 * Returns the tag of this dictionary.
	 *
	 * @return the tag of this dictionary
	 */
	@AutoEscape
	public String getTag();

	/**
	 * Sets the tag of this dictionary.
	 *
	 * @param tag the tag of this dictionary
	 */
	public void setTag(String tag);

	/**
	 * Returns the is valid of this dictionary.
	 *
	 * @return the is valid of this dictionary
	 */
	public boolean getIsValid();

	/**
	 * Returns <code>true</code> if this dictionary is is valid.
	 *
	 * @return <code>true</code> if this dictionary is is valid; <code>false</code> otherwise
	 */
	public boolean isIsValid();

	/**
	 * Sets whether this dictionary is is valid.
	 *
	 * @param isValid the is valid of this dictionary
	 */
	public void setIsValid(boolean isValid);

	/**
	 * Returns the tree path of this dictionary.
	 *
	 * @return the tree path of this dictionary
	 */
	@AutoEscape
	public String getTreePath();

	/**
	 * Sets the tree path of this dictionary.
	 *
	 * @param treePath the tree path of this dictionary
	 */
	public void setTreePath(String treePath);

	/**
	 * Returns the sort path of this dictionary.
	 *
	 * @return the sort path of this dictionary
	 */
	@AutoEscape
	public String getSortPath();

	/**
	 * Sets the sort path of this dictionary.
	 *
	 * @param sortPath the sort path of this dictionary
	 */
	public void setSortPath(String sortPath);

	/**
	 * Returns the parent ID of this dictionary.
	 *
	 * @return the parent ID of this dictionary
	 */
	public long getParentId();

	/**
	 * Sets the parent ID of this dictionary.
	 *
	 * @param parentId the parent ID of this dictionary
	 */
	public void setParentId(long parentId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.justonetech.sys.model.Dictionary dictionary);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.justonetech.sys.model.Dictionary> toCacheModel();

	@Override
	public com.justonetech.sys.model.Dictionary toEscapedModel();

	@Override
	public com.justonetech.sys.model.Dictionary toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}