/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.justonetech.oa.model.impl;

import com.justonetech.oa.model.DeptWorkItem;
import com.justonetech.oa.model.DeptWorkItemModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DeptWorkItem service. Represents a row in the &quot;oa_DeptWorkItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.justonetech.oa.model.DeptWorkItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DeptWorkItemImpl}.
 * </p>
 *
 * @author justonetech
 * @see DeptWorkItemImpl
 * @see com.justonetech.oa.model.DeptWorkItem
 * @see com.justonetech.oa.model.DeptWorkItemModel
 * @generated
 */
public class DeptWorkItemModelImpl extends BaseModelImpl<DeptWorkItem>
	implements DeptWorkItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dept work item model instance should use the {@link com.justonetech.oa.model.DeptWorkItem} interface instead.
	 */
	public static final String TABLE_NAME = "oa_DeptWorkItem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "deptWorkItemId", Types.BIGINT },
			{ "deptWorkId", Types.BIGINT },
			{ "sortNo", Types.INTEGER },
			{ "dutyPerosn", Types.VARCHAR },
			{ "mainWork", Types.BOOLEAN },
			{ "schedule", Types.VARCHAR },
			{ "content", Types.VARCHAR },
			{ "agentPerson", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table oa_DeptWorkItem (deptWorkItemId LONG not null primary key,deptWorkId LONG,sortNo INTEGER,dutyPerosn VARCHAR(75) null,mainWork BOOLEAN,schedule VARCHAR(75) null,content VARCHAR(1000) null,agentPerson VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table oa_DeptWorkItem";
	public static final String ORDER_BY_JPQL = " ORDER BY deptWorkItem.deptWorkItemId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oa_DeptWorkItem.deptWorkItemId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.justonetech.oa.model.DeptWorkItem"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.justonetech.oa.model.DeptWorkItem"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.justonetech.oa.model.DeptWorkItem"),
			true);
	public static long DEPTWORKID_COLUMN_BITMASK = 1L;
	public static long DEPTWORKITEMID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.justonetech.oa.model.DeptWorkItem"));

	public DeptWorkItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _deptWorkItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDeptWorkItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _deptWorkItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DeptWorkItem.class;
	}

	@Override
	public String getModelClassName() {
		return DeptWorkItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("deptWorkItemId", getDeptWorkItemId());
		attributes.put("deptWorkId", getDeptWorkId());
		attributes.put("sortNo", getSortNo());
		attributes.put("dutyPerosn", getDutyPerosn());
		attributes.put("mainWork", getMainWork());
		attributes.put("schedule", getSchedule());
		attributes.put("content", getContent());
		attributes.put("agentPerson", getAgentPerson());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long deptWorkItemId = (Long)attributes.get("deptWorkItemId");

		if (deptWorkItemId != null) {
			setDeptWorkItemId(deptWorkItemId);
		}

		Long deptWorkId = (Long)attributes.get("deptWorkId");

		if (deptWorkId != null) {
			setDeptWorkId(deptWorkId);
		}

		Integer sortNo = (Integer)attributes.get("sortNo");

		if (sortNo != null) {
			setSortNo(sortNo);
		}

		String dutyPerosn = (String)attributes.get("dutyPerosn");

		if (dutyPerosn != null) {
			setDutyPerosn(dutyPerosn);
		}

		Boolean mainWork = (Boolean)attributes.get("mainWork");

		if (mainWork != null) {
			setMainWork(mainWork);
		}

		String schedule = (String)attributes.get("schedule");

		if (schedule != null) {
			setSchedule(schedule);
		}

		String content = (String)attributes.get("content");

		if (content != null) {
			setContent(content);
		}

		String agentPerson = (String)attributes.get("agentPerson");

		if (agentPerson != null) {
			setAgentPerson(agentPerson);
		}
	}

	@Override
	public long getDeptWorkItemId() {
		return _deptWorkItemId;
	}

	@Override
	public void setDeptWorkItemId(long deptWorkItemId) {
		_deptWorkItemId = deptWorkItemId;
	}

	@Override
	public long getDeptWorkId() {
		return _deptWorkId;
	}

	@Override
	public void setDeptWorkId(long deptWorkId) {
		_columnBitmask |= DEPTWORKID_COLUMN_BITMASK;

		if (!_setOriginalDeptWorkId) {
			_setOriginalDeptWorkId = true;

			_originalDeptWorkId = _deptWorkId;
		}

		_deptWorkId = deptWorkId;
	}

	public long getOriginalDeptWorkId() {
		return _originalDeptWorkId;
	}

	@Override
	public int getSortNo() {
		return _sortNo;
	}

	@Override
	public void setSortNo(int sortNo) {
		_sortNo = sortNo;
	}

	@Override
	public String getDutyPerosn() {
		if (_dutyPerosn == null) {
			return StringPool.BLANK;
		}
		else {
			return _dutyPerosn;
		}
	}

	@Override
	public void setDutyPerosn(String dutyPerosn) {
		_dutyPerosn = dutyPerosn;
	}

	@Override
	public boolean getMainWork() {
		return _mainWork;
	}

	@Override
	public boolean isMainWork() {
		return _mainWork;
	}

	@Override
	public void setMainWork(boolean mainWork) {
		_mainWork = mainWork;
	}

	@Override
	public String getSchedule() {
		if (_schedule == null) {
			return StringPool.BLANK;
		}
		else {
			return _schedule;
		}
	}

	@Override
	public void setSchedule(String schedule) {
		_schedule = schedule;
	}

	@Override
	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		_content = content;
	}

	@Override
	public String getAgentPerson() {
		if (_agentPerson == null) {
			return StringPool.BLANK;
		}
		else {
			return _agentPerson;
		}
	}

	@Override
	public void setAgentPerson(String agentPerson) {
		_agentPerson = agentPerson;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			DeptWorkItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DeptWorkItem toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DeptWorkItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DeptWorkItemImpl deptWorkItemImpl = new DeptWorkItemImpl();

		deptWorkItemImpl.setDeptWorkItemId(getDeptWorkItemId());
		deptWorkItemImpl.setDeptWorkId(getDeptWorkId());
		deptWorkItemImpl.setSortNo(getSortNo());
		deptWorkItemImpl.setDutyPerosn(getDutyPerosn());
		deptWorkItemImpl.setMainWork(getMainWork());
		deptWorkItemImpl.setSchedule(getSchedule());
		deptWorkItemImpl.setContent(getContent());
		deptWorkItemImpl.setAgentPerson(getAgentPerson());

		deptWorkItemImpl.resetOriginalValues();

		return deptWorkItemImpl;
	}

	@Override
	public int compareTo(DeptWorkItem deptWorkItem) {
		long primaryKey = deptWorkItem.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DeptWorkItem)) {
			return false;
		}

		DeptWorkItem deptWorkItem = (DeptWorkItem)obj;

		long primaryKey = deptWorkItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DeptWorkItemModelImpl deptWorkItemModelImpl = this;

		deptWorkItemModelImpl._originalDeptWorkId = deptWorkItemModelImpl._deptWorkId;

		deptWorkItemModelImpl._setOriginalDeptWorkId = false;

		deptWorkItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DeptWorkItem> toCacheModel() {
		DeptWorkItemCacheModel deptWorkItemCacheModel = new DeptWorkItemCacheModel();

		deptWorkItemCacheModel.deptWorkItemId = getDeptWorkItemId();

		deptWorkItemCacheModel.deptWorkId = getDeptWorkId();

		deptWorkItemCacheModel.sortNo = getSortNo();

		deptWorkItemCacheModel.dutyPerosn = getDutyPerosn();

		String dutyPerosn = deptWorkItemCacheModel.dutyPerosn;

		if ((dutyPerosn != null) && (dutyPerosn.length() == 0)) {
			deptWorkItemCacheModel.dutyPerosn = null;
		}

		deptWorkItemCacheModel.mainWork = getMainWork();

		deptWorkItemCacheModel.schedule = getSchedule();

		String schedule = deptWorkItemCacheModel.schedule;

		if ((schedule != null) && (schedule.length() == 0)) {
			deptWorkItemCacheModel.schedule = null;
		}

		deptWorkItemCacheModel.content = getContent();

		String content = deptWorkItemCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			deptWorkItemCacheModel.content = null;
		}

		deptWorkItemCacheModel.agentPerson = getAgentPerson();

		String agentPerson = deptWorkItemCacheModel.agentPerson;

		if ((agentPerson != null) && (agentPerson.length() == 0)) {
			deptWorkItemCacheModel.agentPerson = null;
		}

		return deptWorkItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{deptWorkItemId=");
		sb.append(getDeptWorkItemId());
		sb.append(", deptWorkId=");
		sb.append(getDeptWorkId());
		sb.append(", sortNo=");
		sb.append(getSortNo());
		sb.append(", dutyPerosn=");
		sb.append(getDutyPerosn());
		sb.append(", mainWork=");
		sb.append(getMainWork());
		sb.append(", schedule=");
		sb.append(getSchedule());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", agentPerson=");
		sb.append(getAgentPerson());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.justonetech.oa.model.DeptWorkItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>deptWorkItemId</column-name><column-value><![CDATA[");
		sb.append(getDeptWorkItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deptWorkId</column-name><column-value><![CDATA[");
		sb.append(getDeptWorkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sortNo</column-name><column-value><![CDATA[");
		sb.append(getSortNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dutyPerosn</column-name><column-value><![CDATA[");
		sb.append(getDutyPerosn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mainWork</column-name><column-value><![CDATA[");
		sb.append(getMainWork());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>schedule</column-name><column-value><![CDATA[");
		sb.append(getSchedule());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>agentPerson</column-name><column-value><![CDATA[");
		sb.append(getAgentPerson());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DeptWorkItem.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DeptWorkItem.class
		};
	private long _deptWorkItemId;
	private long _deptWorkId;
	private long _originalDeptWorkId;
	private boolean _setOriginalDeptWorkId;
	private int _sortNo;
	private String _dutyPerosn;
	private boolean _mainWork;
	private String _schedule;
	private String _content;
	private String _agentPerson;
	private long _columnBitmask;
	private DeptWorkItem _escapedModel;
}