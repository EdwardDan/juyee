/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.justonetech.oa.model.impl;

import com.justonetech.oa.model.VehicleApplication;
import com.justonetech.oa.model.VehicleApplicationModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VehicleApplication service. Represents a row in the &quot;oa_VehicleApplication&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.justonetech.oa.model.VehicleApplicationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VehicleApplicationImpl}.
 * </p>
 *
 * @author justonetech
 * @see VehicleApplicationImpl
 * @see com.justonetech.oa.model.VehicleApplication
 * @see com.justonetech.oa.model.VehicleApplicationModel
 * @generated
 */
public class VehicleApplicationModelImpl extends BaseModelImpl<VehicleApplication>
	implements VehicleApplicationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vehicle application model instance should use the {@link com.justonetech.oa.model.VehicleApplication} interface instead.
	 */
	public static final String TABLE_NAME = "oa_VehicleApplication";
	public static final Object[][] TABLE_COLUMNS = {
			{ "vehicleApplicationId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createTime", Types.TIMESTAMP },
			{ "modifiedTime", Types.TIMESTAMP },
			{ "applicantDeptId", Types.BIGINT },
			{ "applicantDeptName", Types.VARCHAR },
			{ "applicantId", Types.BIGINT },
			{ "applicantName", Types.VARCHAR },
			{ "startTime", Types.TIMESTAMP },
			{ "endTime", Types.TIMESTAMP },
			{ "passengerNum", Types.INTEGER },
			{ "reason", Types.VARCHAR },
			{ "destination", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table oa_VehicleApplication (vehicleApplicationId LONG not null primary key,userId LONG,userName VARCHAR(75) null,createTime DATE null,modifiedTime DATE null,applicantDeptId LONG,applicantDeptName VARCHAR(75) null,applicantId LONG,applicantName VARCHAR(75) null,startTime DATE null,endTime DATE null,passengerNum INTEGER,reason VARCHAR(1000) null,destination VARCHAR(200) null)";
	public static final String TABLE_SQL_DROP = "drop table oa_VehicleApplication";
	public static final String ORDER_BY_JPQL = " ORDER BY vehicleApplication.modifiedTime DESC";
	public static final String ORDER_BY_SQL = " ORDER BY oa_VehicleApplication.modifiedTime DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.justonetech.oa.model.VehicleApplication"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.justonetech.oa.model.VehicleApplication"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.justonetech.oa.model.VehicleApplication"),
			true);
	public static long APPLICANTNAME_COLUMN_BITMASK = 1L;
	public static long MODIFIEDTIME_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.justonetech.oa.model.VehicleApplication"));

	public VehicleApplicationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _vehicleApplicationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setVehicleApplicationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _vehicleApplicationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VehicleApplication.class;
	}

	@Override
	public String getModelClassName() {
		return VehicleApplication.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("vehicleApplicationId", getVehicleApplicationId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createTime", getCreateTime());
		attributes.put("modifiedTime", getModifiedTime());
		attributes.put("applicantDeptId", getApplicantDeptId());
		attributes.put("applicantDeptName", getApplicantDeptName());
		attributes.put("applicantId", getApplicantId());
		attributes.put("applicantName", getApplicantName());
		attributes.put("startTime", getStartTime());
		attributes.put("endTime", getEndTime());
		attributes.put("passengerNum", getPassengerNum());
		attributes.put("reason", getReason());
		attributes.put("destination", getDestination());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long vehicleApplicationId = (Long)attributes.get("vehicleApplicationId");

		if (vehicleApplicationId != null) {
			setVehicleApplicationId(vehicleApplicationId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createTime = (Date)attributes.get("createTime");

		if (createTime != null) {
			setCreateTime(createTime);
		}

		Date modifiedTime = (Date)attributes.get("modifiedTime");

		if (modifiedTime != null) {
			setModifiedTime(modifiedTime);
		}

		Long applicantDeptId = (Long)attributes.get("applicantDeptId");

		if (applicantDeptId != null) {
			setApplicantDeptId(applicantDeptId);
		}

		String applicantDeptName = (String)attributes.get("applicantDeptName");

		if (applicantDeptName != null) {
			setApplicantDeptName(applicantDeptName);
		}

		Long applicantId = (Long)attributes.get("applicantId");

		if (applicantId != null) {
			setApplicantId(applicantId);
		}

		String applicantName = (String)attributes.get("applicantName");

		if (applicantName != null) {
			setApplicantName(applicantName);
		}

		Date startTime = (Date)attributes.get("startTime");

		if (startTime != null) {
			setStartTime(startTime);
		}

		Date endTime = (Date)attributes.get("endTime");

		if (endTime != null) {
			setEndTime(endTime);
		}

		Integer passengerNum = (Integer)attributes.get("passengerNum");

		if (passengerNum != null) {
			setPassengerNum(passengerNum);
		}

		String reason = (String)attributes.get("reason");

		if (reason != null) {
			setReason(reason);
		}

		String destination = (String)attributes.get("destination");

		if (destination != null) {
			setDestination(destination);
		}
	}

	@Override
	public long getVehicleApplicationId() {
		return _vehicleApplicationId;
	}

	@Override
	public void setVehicleApplicationId(long vehicleApplicationId) {
		_vehicleApplicationId = vehicleApplicationId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateTime() {
		return _createTime;
	}

	@Override
	public void setCreateTime(Date createTime) {
		_createTime = createTime;
	}

	@Override
	public Date getModifiedTime() {
		return _modifiedTime;
	}

	@Override
	public void setModifiedTime(Date modifiedTime) {
		_columnBitmask = -1L;

		_modifiedTime = modifiedTime;
	}

	@Override
	public long getApplicantDeptId() {
		return _applicantDeptId;
	}

	@Override
	public void setApplicantDeptId(long applicantDeptId) {
		_applicantDeptId = applicantDeptId;
	}

	@Override
	public String getApplicantDeptName() {
		if (_applicantDeptName == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantDeptName;
		}
	}

	@Override
	public void setApplicantDeptName(String applicantDeptName) {
		_applicantDeptName = applicantDeptName;
	}

	@Override
	public long getApplicantId() {
		return _applicantId;
	}

	@Override
	public void setApplicantId(long applicantId) {
		_applicantId = applicantId;
	}

	@Override
	public String getApplicantName() {
		if (_applicantName == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantName;
		}
	}

	@Override
	public void setApplicantName(String applicantName) {
		_columnBitmask |= APPLICANTNAME_COLUMN_BITMASK;

		if (_originalApplicantName == null) {
			_originalApplicantName = _applicantName;
		}

		_applicantName = applicantName;
	}

	public String getOriginalApplicantName() {
		return GetterUtil.getString(_originalApplicantName);
	}

	@Override
	public Date getStartTime() {
		return _startTime;
	}

	@Override
	public void setStartTime(Date startTime) {
		_startTime = startTime;
	}

	@Override
	public Date getEndTime() {
		return _endTime;
	}

	@Override
	public void setEndTime(Date endTime) {
		_endTime = endTime;
	}

	@Override
	public int getPassengerNum() {
		return _passengerNum;
	}

	@Override
	public void setPassengerNum(int passengerNum) {
		_passengerNum = passengerNum;
	}

	@Override
	public String getReason() {
		if (_reason == null) {
			return StringPool.BLANK;
		}
		else {
			return _reason;
		}
	}

	@Override
	public void setReason(String reason) {
		_reason = reason;
	}

	@Override
	public String getDestination() {
		if (_destination == null) {
			return StringPool.BLANK;
		}
		else {
			return _destination;
		}
	}

	@Override
	public void setDestination(String destination) {
		_destination = destination;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			VehicleApplication.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VehicleApplication toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VehicleApplication)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VehicleApplicationImpl vehicleApplicationImpl = new VehicleApplicationImpl();

		vehicleApplicationImpl.setVehicleApplicationId(getVehicleApplicationId());
		vehicleApplicationImpl.setUserId(getUserId());
		vehicleApplicationImpl.setUserName(getUserName());
		vehicleApplicationImpl.setCreateTime(getCreateTime());
		vehicleApplicationImpl.setModifiedTime(getModifiedTime());
		vehicleApplicationImpl.setApplicantDeptId(getApplicantDeptId());
		vehicleApplicationImpl.setApplicantDeptName(getApplicantDeptName());
		vehicleApplicationImpl.setApplicantId(getApplicantId());
		vehicleApplicationImpl.setApplicantName(getApplicantName());
		vehicleApplicationImpl.setStartTime(getStartTime());
		vehicleApplicationImpl.setEndTime(getEndTime());
		vehicleApplicationImpl.setPassengerNum(getPassengerNum());
		vehicleApplicationImpl.setReason(getReason());
		vehicleApplicationImpl.setDestination(getDestination());

		vehicleApplicationImpl.resetOriginalValues();

		return vehicleApplicationImpl;
	}

	@Override
	public int compareTo(VehicleApplication vehicleApplication) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedTime(),
				vehicleApplication.getModifiedTime());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VehicleApplication)) {
			return false;
		}

		VehicleApplication vehicleApplication = (VehicleApplication)obj;

		long primaryKey = vehicleApplication.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		VehicleApplicationModelImpl vehicleApplicationModelImpl = this;

		vehicleApplicationModelImpl._originalApplicantName = vehicleApplicationModelImpl._applicantName;

		vehicleApplicationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VehicleApplication> toCacheModel() {
		VehicleApplicationCacheModel vehicleApplicationCacheModel = new VehicleApplicationCacheModel();

		vehicleApplicationCacheModel.vehicleApplicationId = getVehicleApplicationId();

		vehicleApplicationCacheModel.userId = getUserId();

		vehicleApplicationCacheModel.userName = getUserName();

		String userName = vehicleApplicationCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			vehicleApplicationCacheModel.userName = null;
		}

		Date createTime = getCreateTime();

		if (createTime != null) {
			vehicleApplicationCacheModel.createTime = createTime.getTime();
		}
		else {
			vehicleApplicationCacheModel.createTime = Long.MIN_VALUE;
		}

		Date modifiedTime = getModifiedTime();

		if (modifiedTime != null) {
			vehicleApplicationCacheModel.modifiedTime = modifiedTime.getTime();
		}
		else {
			vehicleApplicationCacheModel.modifiedTime = Long.MIN_VALUE;
		}

		vehicleApplicationCacheModel.applicantDeptId = getApplicantDeptId();

		vehicleApplicationCacheModel.applicantDeptName = getApplicantDeptName();

		String applicantDeptName = vehicleApplicationCacheModel.applicantDeptName;

		if ((applicantDeptName != null) && (applicantDeptName.length() == 0)) {
			vehicleApplicationCacheModel.applicantDeptName = null;
		}

		vehicleApplicationCacheModel.applicantId = getApplicantId();

		vehicleApplicationCacheModel.applicantName = getApplicantName();

		String applicantName = vehicleApplicationCacheModel.applicantName;

		if ((applicantName != null) && (applicantName.length() == 0)) {
			vehicleApplicationCacheModel.applicantName = null;
		}

		Date startTime = getStartTime();

		if (startTime != null) {
			vehicleApplicationCacheModel.startTime = startTime.getTime();
		}
		else {
			vehicleApplicationCacheModel.startTime = Long.MIN_VALUE;
		}

		Date endTime = getEndTime();

		if (endTime != null) {
			vehicleApplicationCacheModel.endTime = endTime.getTime();
		}
		else {
			vehicleApplicationCacheModel.endTime = Long.MIN_VALUE;
		}

		vehicleApplicationCacheModel.passengerNum = getPassengerNum();

		vehicleApplicationCacheModel.reason = getReason();

		String reason = vehicleApplicationCacheModel.reason;

		if ((reason != null) && (reason.length() == 0)) {
			vehicleApplicationCacheModel.reason = null;
		}

		vehicleApplicationCacheModel.destination = getDestination();

		String destination = vehicleApplicationCacheModel.destination;

		if ((destination != null) && (destination.length() == 0)) {
			vehicleApplicationCacheModel.destination = null;
		}

		return vehicleApplicationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{vehicleApplicationId=");
		sb.append(getVehicleApplicationId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createTime=");
		sb.append(getCreateTime());
		sb.append(", modifiedTime=");
		sb.append(getModifiedTime());
		sb.append(", applicantDeptId=");
		sb.append(getApplicantDeptId());
		sb.append(", applicantDeptName=");
		sb.append(getApplicantDeptName());
		sb.append(", applicantId=");
		sb.append(getApplicantId());
		sb.append(", applicantName=");
		sb.append(getApplicantName());
		sb.append(", startTime=");
		sb.append(getStartTime());
		sb.append(", endTime=");
		sb.append(getEndTime());
		sb.append(", passengerNum=");
		sb.append(getPassengerNum());
		sb.append(", reason=");
		sb.append(getReason());
		sb.append(", destination=");
		sb.append(getDestination());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.justonetech.oa.model.VehicleApplication");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>vehicleApplicationId</column-name><column-value><![CDATA[");
		sb.append(getVehicleApplicationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createTime</column-name><column-value><![CDATA[");
		sb.append(getCreateTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedTime</column-name><column-value><![CDATA[");
		sb.append(getModifiedTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantDeptId</column-name><column-value><![CDATA[");
		sb.append(getApplicantDeptId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantDeptName</column-name><column-value><![CDATA[");
		sb.append(getApplicantDeptName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantId</column-name><column-value><![CDATA[");
		sb.append(getApplicantId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantName</column-name><column-value><![CDATA[");
		sb.append(getApplicantName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startTime</column-name><column-value><![CDATA[");
		sb.append(getStartTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endTime</column-name><column-value><![CDATA[");
		sb.append(getEndTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passengerNum</column-name><column-value><![CDATA[");
		sb.append(getPassengerNum());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reason</column-name><column-value><![CDATA[");
		sb.append(getReason());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>destination</column-name><column-value><![CDATA[");
		sb.append(getDestination());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VehicleApplication.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VehicleApplication.class
		};
	private long _vehicleApplicationId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createTime;
	private Date _modifiedTime;
	private long _applicantDeptId;
	private String _applicantDeptName;
	private long _applicantId;
	private String _applicantName;
	private String _originalApplicantName;
	private Date _startTime;
	private Date _endTime;
	private int _passengerNum;
	private String _reason;
	private String _destination;
	private long _columnBitmask;
	private VehicleApplication _escapedModel;
}