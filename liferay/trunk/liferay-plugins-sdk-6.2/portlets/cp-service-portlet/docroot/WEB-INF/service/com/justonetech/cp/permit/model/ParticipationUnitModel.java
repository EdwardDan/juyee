/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.justonetech.cp.permit.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the ParticipationUnit service. Represents a row in the &quot;cp_ParticipationUnit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.justonetech.cp.permit.model.impl.ParticipationUnitModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.justonetech.cp.permit.model.impl.ParticipationUnitImpl}.
 * </p>
 *
 * @author fanqi
 * @see ParticipationUnit
 * @see com.justonetech.cp.permit.model.impl.ParticipationUnitImpl
 * @see com.justonetech.cp.permit.model.impl.ParticipationUnitModelImpl
 * @generated
 */
public interface ParticipationUnitModel extends BaseModel<ParticipationUnit> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a participation unit model instance should use the {@link ParticipationUnit} interface instead.
	 */

	/**
	 * Returns the primary key of this participation unit.
	 *
	 * @return the primary key of this participation unit
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this participation unit.
	 *
	 * @param primaryKey the primary key of this participation unit
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the unit ID of this participation unit.
	 *
	 * @return the unit ID of this participation unit
	 */
	public long getUnitId();

	/**
	 * Sets the unit ID of this participation unit.
	 *
	 * @param unitId the unit ID of this participation unit
	 */
	public void setUnitId(long unitId);

	/**
	 * Returns the permit ID of this participation unit.
	 *
	 * @return the permit ID of this participation unit
	 */
	@AutoEscape
	public String getPermitId();

	/**
	 * Sets the permit ID of this participation unit.
	 *
	 * @param permitId the permit ID of this participation unit
	 */
	public void setPermitId(String permitId);

	/**
	 * Returns the htxxbsbh of this participation unit.
	 *
	 * @return the htxxbsbh of this participation unit
	 */
	@AutoEscape
	public String getHtxxbsbh();

	/**
	 * Sets the htxxbsbh of this participation unit.
	 *
	 * @param htxxbsbh the htxxbsbh of this participation unit
	 */
	public void setHtxxbsbh(String htxxbsbh);

	/**
	 * Returns the dwlx of this participation unit.
	 *
	 * @return the dwlx of this participation unit
	 */
	@AutoEscape
	public String getDwlx();

	/**
	 * Sets the dwlx of this participation unit.
	 *
	 * @param dwlx the dwlx of this participation unit
	 */
	public void setDwlx(String dwlx);

	/**
	 * Returns the dwmc of this participation unit.
	 *
	 * @return the dwmc of this participation unit
	 */
	@AutoEscape
	public String getDwmc();

	/**
	 * Sets the dwmc of this participation unit.
	 *
	 * @param dwmc the dwmc of this participation unit
	 */
	public void setDwmc(String dwmc);

	/**
	 * Returns the xmfzr of this participation unit.
	 *
	 * @return the xmfzr of this participation unit
	 */
	@AutoEscape
	public String getXmfzr();

	/**
	 * Sets the xmfzr of this participation unit.
	 *
	 * @param xmfzr the xmfzr of this participation unit
	 */
	public void setXmfzr(String xmfzr);

	/**
	 * Returns the dhhm of this participation unit.
	 *
	 * @return the dhhm of this participation unit
	 */
	@AutoEscape
	public String getDhhm();

	/**
	 * Sets the dhhm of this participation unit.
	 *
	 * @param dhhm the dhhm of this participation unit
	 */
	public void setDhhm(String dhhm);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.justonetech.cp.permit.model.ParticipationUnit participationUnit);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.justonetech.cp.permit.model.ParticipationUnit> toCacheModel();

	@Override
	public com.justonetech.cp.permit.model.ParticipationUnit toEscapedModel();

	@Override
	public com.justonetech.cp.permit.model.ParticipationUnit toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}