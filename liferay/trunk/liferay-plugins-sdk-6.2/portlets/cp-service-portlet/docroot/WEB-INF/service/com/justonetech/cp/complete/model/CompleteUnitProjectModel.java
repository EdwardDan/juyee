/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.justonetech.cp.complete.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the CompleteUnitProject service. Represents a row in the &quot;cp_CompleteUnitProject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.justonetech.cp.complete.model.impl.CompleteUnitProjectModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.justonetech.cp.complete.model.impl.CompleteUnitProjectImpl}.
 * </p>
 *
 * @author fanqi
 * @see CompleteUnitProject
 * @see com.justonetech.cp.complete.model.impl.CompleteUnitProjectImpl
 * @see com.justonetech.cp.complete.model.impl.CompleteUnitProjectModelImpl
 * @generated
 */
public interface CompleteUnitProjectModel extends BaseModel<CompleteUnitProject> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a complete unit project model instance should use the {@link CompleteUnitProject} interface instead.
	 */

	/**
	 * Returns the primary key of this complete unit project.
	 *
	 * @return the primary key of this complete unit project
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this complete unit project.
	 *
	 * @param primaryKey the primary key of this complete unit project
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the project ID of this complete unit project.
	 *
	 * @return the project ID of this complete unit project
	 */
	public long getProjectId();

	/**
	 * Sets the project ID of this complete unit project.
	 *
	 * @param projectId the project ID of this complete unit project
	 */
	public void setProjectId(long projectId);

	/**
	 * Returns the complete ID of this complete unit project.
	 *
	 * @return the complete ID of this complete unit project
	 */
	public long getCompleteId();

	/**
	 * Sets the complete ID of this complete unit project.
	 *
	 * @param completeId the complete ID of this complete unit project
	 */
	public void setCompleteId(long completeId);

	/**
	 * Returns the permit unit project ID of this complete unit project.
	 *
	 * @return the permit unit project ID of this complete unit project
	 */
	public long getPermitUnitProjectId();

	/**
	 * Sets the permit unit project ID of this complete unit project.
	 *
	 * @param permitUnitProjectId the permit unit project ID of this complete unit project
	 */
	public void setPermitUnitProjectId(long permitUnitProjectId);

	/**
	 * Returns the bjbh of this complete unit project.
	 *
	 * @return the bjbh of this complete unit project
	 */
	@AutoEscape
	public String getBjbh();

	/**
	 * Sets the bjbh of this complete unit project.
	 *
	 * @param bjbh the bjbh of this complete unit project
	 */
	public void setBjbh(String bjbh);

	/**
	 * Returns the sgxkzbh of this complete unit project.
	 *
	 * @return the sgxkzbh of this complete unit project
	 */
	@AutoEscape
	public String getSgxkzbh();

	/**
	 * Sets the sgxkzbh of this complete unit project.
	 *
	 * @param sgxkzbh the sgxkzbh of this complete unit project
	 */
	public void setSgxkzbh(String sgxkzbh);

	/**
	 * Returns the gcbh of this complete unit project.
	 *
	 * @return the gcbh of this complete unit project
	 */
	@AutoEscape
	public String getGcbh();

	/**
	 * Sets the gcbh of this complete unit project.
	 *
	 * @param gcbh the gcbh of this complete unit project
	 */
	public void setGcbh(String gcbh);

	/**
	 * Returns the gcmc of this complete unit project.
	 *
	 * @return the gcmc of this complete unit project
	 */
	@AutoEscape
	public String getGcmc();

	/**
	 * Sets the gcmc of this complete unit project.
	 *
	 * @param gcmc the gcmc of this complete unit project
	 */
	public void setGcmc(String gcmc);

	/**
	 * Returns the jsnr of this complete unit project.
	 *
	 * @return the jsnr of this complete unit project
	 */
	@AutoEscape
	public String getJsnr();

	/**
	 * Sets the jsnr of this complete unit project.
	 *
	 * @param jsnr the jsnr of this complete unit project
	 */
	public void setJsnr(String jsnr);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.justonetech.cp.complete.model.CompleteUnitProject completeUnitProject);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.justonetech.cp.complete.model.CompleteUnitProject> toCacheModel();

	@Override
	public com.justonetech.cp.complete.model.CompleteUnitProject toEscapedModel();

	@Override
	public com.justonetech.cp.complete.model.CompleteUnitProject toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}