/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.justonetech.cp.contract.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Contract service. Represents a row in the &quot;cp_Contract&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.justonetech.cp.contract.model.impl.ContractModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.justonetech.cp.contract.model.impl.ContractImpl}.
 * </p>
 *
 * @author fanqi
 * @see Contract
 * @see com.justonetech.cp.contract.model.impl.ContractImpl
 * @see com.justonetech.cp.contract.model.impl.ContractModelImpl
 * @generated
 */
public interface ContractModel extends BaseModel<Contract> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a contract model instance should use the {@link Contract} interface instead.
	 */

	/**
	 * Returns the primary key of this contract.
	 *
	 * @return the primary key of this contract
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this contract.
	 *
	 * @param primaryKey the primary key of this contract
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the contract ID of this contract.
	 *
	 * @return the contract ID of this contract
	 */
	@AutoEscape
	public String getContractId();

	/**
	 * Sets the contract ID of this contract.
	 *
	 * @param contractId the contract ID of this contract
	 */
	public void setContractId(String contractId);

	/**
	 * Returns the htlb of this contract.
	 *
	 * @return the htlb of this contract
	 */
	@AutoEscape
	public String getHtlb();

	/**
	 * Sets the htlb of this contract.
	 *
	 * @param htlb the htlb of this contract
	 */
	public void setHtlb(String htlb);

	/**
	 * Returns the bjbh of this contract.
	 *
	 * @return the bjbh of this contract
	 */
	@AutoEscape
	public String getBjbh();

	/**
	 * Sets the bjbh of this contract.
	 *
	 * @param bjbh the bjbh of this contract
	 */
	public void setBjbh(String bjbh);

	/**
	 * Returns the bdh of this contract.
	 *
	 * @return the bdh of this contract
	 */
	@AutoEscape
	public String getBdh();

	/**
	 * Sets the bdh of this contract.
	 *
	 * @param bdh the bdh of this contract
	 */
	public void setBdh(String bdh);

	/**
	 * Returns the cbfs of this contract.
	 *
	 * @return the cbfs of this contract
	 */
	@AutoEscape
	public String getCbfs();

	/**
	 * Sets the cbfs of this contract.
	 *
	 * @param cbfs the cbfs of this contract
	 */
	public void setCbfs(String cbfs);

	/**
	 * Returns the htmc of this contract.
	 *
	 * @return the htmc of this contract
	 */
	@AutoEscape
	public String getHtmc();

	/**
	 * Sets the htmc of this contract.
	 *
	 * @param htmc the htmc of this contract
	 */
	public void setHtmc(String htmc);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.justonetech.cp.contract.model.Contract contract);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.justonetech.cp.contract.model.Contract> toCacheModel();

	@Override
	public com.justonetech.cp.contract.model.Contract toEscapedModel();

	@Override
	public com.justonetech.cp.contract.model.Contract toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}